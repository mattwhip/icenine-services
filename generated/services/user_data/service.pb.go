// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package userdata

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A request for user data
type UserRequest struct {
	// User ID of desired user data
	UID                  string   `protobuf:"bytes,1,opt,name=UID,proto3" json:"UID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetUID() string {
	if m != nil {
		return m.UID
	}
	return ""
}

// A response with user data
type UserResponse struct {
	// Coins
	Coins int64 `protobuf:"varint,1,opt,name=coins,proto3" json:"coins,omitempty"`
	// Exists is true if the user exists
	Exists bool `protobuf:"varint,2,opt,name=exists,proto3" json:"exists,omitempty"`
	// Glicko2 rating of the player
	Rating               *Rating  `protobuf:"bytes,3,opt,name=rating,proto3" json:"rating,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserResponse) Reset()         { *m = UserResponse{} }
func (m *UserResponse) String() string { return proto.CompactTextString(m) }
func (*UserResponse) ProtoMessage()    {}
func (*UserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *UserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserResponse.Unmarshal(m, b)
}
func (m *UserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserResponse.Marshal(b, m, deterministic)
}
func (m *UserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserResponse.Merge(m, src)
}
func (m *UserResponse) XXX_Size() int {
	return xxx_messageInfo_UserResponse.Size(m)
}
func (m *UserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserResponse proto.InternalMessageInfo

func (m *UserResponse) GetCoins() int64 {
	if m != nil {
		return m.Coins
	}
	return 0
}

func (m *UserResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

func (m *UserResponse) GetRating() *Rating {
	if m != nil {
		return m.Rating
	}
	return nil
}

//A request for one or more user balances
type BalancesRequest struct {
	UserIDs              []string `protobuf:"bytes,1,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BalancesRequest) Reset()         { *m = BalancesRequest{} }
func (m *BalancesRequest) String() string { return proto.CompactTextString(m) }
func (*BalancesRequest) ProtoMessage()    {}
func (*BalancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *BalancesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BalancesRequest.Unmarshal(m, b)
}
func (m *BalancesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BalancesRequest.Marshal(b, m, deterministic)
}
func (m *BalancesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BalancesRequest.Merge(m, src)
}
func (m *BalancesRequest) XXX_Size() int {
	return xxx_messageInfo_BalancesRequest.Size(m)
}
func (m *BalancesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BalancesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BalancesRequest proto.InternalMessageInfo

func (m *BalancesRequest) GetUserIDs() []string {
	if m != nil {
		return m.UserIDs
	}
	return nil
}

// A response containing one or more user balances
type BalancesResponse struct {
	Balances             map[string]int64 `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BalancesResponse) Reset()         { *m = BalancesResponse{} }
func (m *BalancesResponse) String() string { return proto.CompactTextString(m) }
func (*BalancesResponse) ProtoMessage()    {}
func (*BalancesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *BalancesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BalancesResponse.Unmarshal(m, b)
}
func (m *BalancesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BalancesResponse.Marshal(b, m, deterministic)
}
func (m *BalancesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BalancesResponse.Merge(m, src)
}
func (m *BalancesResponse) XXX_Size() int {
	return xxx_messageInfo_BalancesResponse.Size(m)
}
func (m *BalancesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BalancesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BalancesResponse proto.InternalMessageInfo

func (m *BalancesResponse) GetBalances() map[string]int64 {
	if m != nil {
		return m.Balances
	}
	return nil
}

// A request to perform a coin transaction on one or more users
type CoinTransactionRequest struct {
	Transactions         map[string]int64 `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CoinTransactionRequest) Reset()         { *m = CoinTransactionRequest{} }
func (m *CoinTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*CoinTransactionRequest) ProtoMessage()    {}
func (*CoinTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *CoinTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoinTransactionRequest.Unmarshal(m, b)
}
func (m *CoinTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoinTransactionRequest.Marshal(b, m, deterministic)
}
func (m *CoinTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoinTransactionRequest.Merge(m, src)
}
func (m *CoinTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_CoinTransactionRequest.Size(m)
}
func (m *CoinTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CoinTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CoinTransactionRequest proto.InternalMessageInfo

func (m *CoinTransactionRequest) GetTransactions() map[string]int64 {
	if m != nil {
		return m.Transactions
	}
	return nil
}

// A reponse with final balances after a coin transaction is executed
type CoinTransactionResponse struct {
	Balances             map[string]int64 `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CoinTransactionResponse) Reset()         { *m = CoinTransactionResponse{} }
func (m *CoinTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*CoinTransactionResponse) ProtoMessage()    {}
func (*CoinTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *CoinTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoinTransactionResponse.Unmarshal(m, b)
}
func (m *CoinTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoinTransactionResponse.Marshal(b, m, deterministic)
}
func (m *CoinTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoinTransactionResponse.Merge(m, src)
}
func (m *CoinTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_CoinTransactionResponse.Size(m)
}
func (m *CoinTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CoinTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CoinTransactionResponse proto.InternalMessageInfo

func (m *CoinTransactionResponse) GetBalances() map[string]int64 {
	if m != nil {
		return m.Balances
	}
	return nil
}

// A request to update skill levels for all players involved in
// a collection of match results
type UpdateSkillRequest struct {
	MatchResults         []*MatchResult `protobuf:"bytes,1,rep,name=matchResults,proto3" json:"matchResults,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateSkillRequest) Reset()         { *m = UpdateSkillRequest{} }
func (m *UpdateSkillRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateSkillRequest) ProtoMessage()    {}
func (*UpdateSkillRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6}
}

func (m *UpdateSkillRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSkillRequest.Unmarshal(m, b)
}
func (m *UpdateSkillRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSkillRequest.Marshal(b, m, deterministic)
}
func (m *UpdateSkillRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSkillRequest.Merge(m, src)
}
func (m *UpdateSkillRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateSkillRequest.Size(m)
}
func (m *UpdateSkillRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSkillRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSkillRequest proto.InternalMessageInfo

func (m *UpdateSkillRequest) GetMatchResults() []*MatchResult {
	if m != nil {
		return m.MatchResults
	}
	return nil
}

// A response from a skill update that includes updated
// Glicko2 ratings for involved players
type UpdateSkillResponse struct {
	Ratings              map[string]*Rating `protobuf:"bytes,1,rep,name=ratings,proto3" json:"ratings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UpdateSkillResponse) Reset()         { *m = UpdateSkillResponse{} }
func (m *UpdateSkillResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateSkillResponse) ProtoMessage()    {}
func (*UpdateSkillResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7}
}

func (m *UpdateSkillResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSkillResponse.Unmarshal(m, b)
}
func (m *UpdateSkillResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSkillResponse.Marshal(b, m, deterministic)
}
func (m *UpdateSkillResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSkillResponse.Merge(m, src)
}
func (m *UpdateSkillResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateSkillResponse.Size(m)
}
func (m *UpdateSkillResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSkillResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSkillResponse proto.InternalMessageInfo

func (m *UpdateSkillResponse) GetRatings() map[string]*Rating {
	if m != nil {
		return m.Ratings
	}
	return nil
}

// A match result describing a win/loss/draw state
type MatchResult struct {
	Player1              string   `protobuf:"bytes,1,opt,name=player1,proto3" json:"player1,omitempty"`
	Player2              string   `protobuf:"bytes,2,opt,name=player2,proto3" json:"player2,omitempty"`
	Score                float64  `protobuf:"fixed64,3,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchResult) Reset()         { *m = MatchResult{} }
func (m *MatchResult) String() string { return proto.CompactTextString(m) }
func (*MatchResult) ProtoMessage()    {}
func (*MatchResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{8}
}

func (m *MatchResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchResult.Unmarshal(m, b)
}
func (m *MatchResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchResult.Marshal(b, m, deterministic)
}
func (m *MatchResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchResult.Merge(m, src)
}
func (m *MatchResult) XXX_Size() int {
	return xxx_messageInfo_MatchResult.Size(m)
}
func (m *MatchResult) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchResult.DiscardUnknown(m)
}

var xxx_messageInfo_MatchResult proto.InternalMessageInfo

func (m *MatchResult) GetPlayer1() string {
	if m != nil {
		return m.Player1
	}
	return ""
}

func (m *MatchResult) GetPlayer2() string {
	if m != nil {
		return m.Player2
	}
	return ""
}

func (m *MatchResult) GetScore() float64 {
	if m != nil {
		return m.Score
	}
	return 0
}

// A Glicko2 rating
type Rating struct {
	// Rating of the player
	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	// Rating deviation of the player
	Deviation float64 `protobuf:"fixed64,2,opt,name=deviation,proto3" json:"deviation,omitempty"`
	// Rating volatility of the player
	Volatility           float64  `protobuf:"fixed64,3,opt,name=volatility,proto3" json:"volatility,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rating) Reset()         { *m = Rating{} }
func (m *Rating) String() string { return proto.CompactTextString(m) }
func (*Rating) ProtoMessage()    {}
func (*Rating) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{9}
}

func (m *Rating) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rating.Unmarshal(m, b)
}
func (m *Rating) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rating.Marshal(b, m, deterministic)
}
func (m *Rating) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rating.Merge(m, src)
}
func (m *Rating) XXX_Size() int {
	return xxx_messageInfo_Rating.Size(m)
}
func (m *Rating) XXX_DiscardUnknown() {
	xxx_messageInfo_Rating.DiscardUnknown(m)
}

var xxx_messageInfo_Rating proto.InternalMessageInfo

func (m *Rating) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Rating) GetDeviation() float64 {
	if m != nil {
		return m.Deviation
	}
	return 0
}

func (m *Rating) GetVolatility() float64 {
	if m != nil {
		return m.Volatility
	}
	return 0
}

func init() {
	proto.RegisterType((*UserRequest)(nil), "userdata.UserRequest")
	proto.RegisterType((*UserResponse)(nil), "userdata.UserResponse")
	proto.RegisterType((*BalancesRequest)(nil), "userdata.BalancesRequest")
	proto.RegisterType((*BalancesResponse)(nil), "userdata.BalancesResponse")
	proto.RegisterMapType((map[string]int64)(nil), "userdata.BalancesResponse.BalancesEntry")
	proto.RegisterType((*CoinTransactionRequest)(nil), "userdata.CoinTransactionRequest")
	proto.RegisterMapType((map[string]int64)(nil), "userdata.CoinTransactionRequest.TransactionsEntry")
	proto.RegisterType((*CoinTransactionResponse)(nil), "userdata.CoinTransactionResponse")
	proto.RegisterMapType((map[string]int64)(nil), "userdata.CoinTransactionResponse.BalancesEntry")
	proto.RegisterType((*UpdateSkillRequest)(nil), "userdata.UpdateSkillRequest")
	proto.RegisterType((*UpdateSkillResponse)(nil), "userdata.UpdateSkillResponse")
	proto.RegisterMapType((map[string]*Rating)(nil), "userdata.UpdateSkillResponse.RatingsEntry")
	proto.RegisterType((*MatchResult)(nil), "userdata.MatchResult")
	proto.RegisterType((*Rating)(nil), "userdata.Rating")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 576 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xdd, 0x8a, 0xd3, 0x40,
	0x14, 0xee, 0x6c, 0xb1, 0x3f, 0x27, 0x5d, 0x6c, 0x47, 0xad, 0x35, 0xac, 0x5a, 0xe7, 0x42, 0x82,
	0x42, 0xc5, 0x78, 0xa3, 0x2b, 0x28, 0x68, 0x75, 0x29, 0xae, 0x0a, 0xa3, 0x55, 0x10, 0x6f, 0x66,
	0xd3, 0xa3, 0x0e, 0x8d, 0x49, 0xcd, 0x4c, 0xab, 0x7d, 0x10, 0x9f, 0xc0, 0x2b, 0x2f, 0x7d, 0x41,
	0x91, 0xfc, 0x4c, 0x93, 0xb6, 0xd9, 0x5d, 0x14, 0xbc, 0xcb, 0xf9, 0x99, 0xef, 0x7c, 0xe7, 0xcb,
	0x39, 0x07, 0x76, 0x15, 0x46, 0x0b, 0xe9, 0xe1, 0x60, 0x16, 0x85, 0x3a, 0xa4, 0x8d, 0xb9, 0xc2,
	0x68, 0x22, 0xb4, 0x60, 0x57, 0xc1, 0x1a, 0x2b, 0x8c, 0x38, 0x7e, 0x99, 0xa3, 0xd2, 0xb4, 0x0d,
	0xd5, 0xf1, 0x68, 0xd8, 0x23, 0x7d, 0xe2, 0x34, 0x79, 0xfc, 0xc9, 0x3e, 0x40, 0x2b, 0x4d, 0x50,
	0xb3, 0x30, 0x50, 0x48, 0xcf, 0xc3, 0x19, 0x2f, 0x94, 0x81, 0x4a, 0x72, 0xaa, 0x3c, 0x35, 0x68,
	0x17, 0x6a, 0xf8, 0x4d, 0x2a, 0xad, 0x7a, 0x3b, 0x7d, 0xe2, 0x34, 0x78, 0x66, 0x51, 0x07, 0x6a,
	0x91, 0xd0, 0x32, 0xf8, 0xd8, 0xab, 0xf6, 0x89, 0x63, 0xb9, 0xed, 0x81, 0xa9, 0x3c, 0xe0, 0x89,
	0x9f, 0x67, 0x71, 0x76, 0x13, 0xce, 0x3e, 0x12, 0xbe, 0x08, 0x3c, 0x54, 0x86, 0x4c, 0x0f, 0xea,
	0x71, 0xf6, 0x68, 0x18, 0x17, 0xab, 0x3a, 0x4d, 0x6e, 0x4c, 0xf6, 0x9d, 0x40, 0x3b, 0xcf, 0xce,
	0x98, 0x0d, 0xa1, 0x71, 0x94, 0xf9, 0x92, 0x7c, 0xcb, 0x75, 0xf2, 0x6a, 0x9b, 0xd9, 0x2b, 0xc7,
	0x93, 0x40, 0x47, 0x4b, 0xbe, 0x7a, 0x69, 0xdf, 0x87, 0xdd, 0xb5, 0x50, 0x2c, 0xc9, 0x14, 0x97,
	0x46, 0x92, 0x29, 0x2e, 0x63, 0x09, 0x16, 0xc2, 0x9f, 0x63, 0xd2, 0x6b, 0x95, 0xa7, 0xc6, 0xfe,
	0xce, 0x5d, 0xc2, 0x7e, 0x11, 0xe8, 0x3e, 0x0e, 0x65, 0xf0, 0x3a, 0x12, 0x81, 0x12, 0x9e, 0x96,
	0x61, 0x60, 0x9a, 0x79, 0x03, 0x2d, 0x9d, 0x7b, 0x0d, 0x43, 0x37, 0x67, 0x58, 0xfe, 0x6e, 0x50,
	0x70, 0x65, 0x5c, 0xd7, 0x70, 0xec, 0x87, 0xd0, 0xd9, 0x4a, 0xf9, 0x2b, 0xce, 0x3f, 0x08, 0x5c,
	0xdc, 0xaa, 0x9d, 0x49, 0xfa, 0x6c, 0x4b, 0xd2, 0x5b, 0x27, 0x10, 0xfe, 0x9f, 0xca, 0xbe, 0x04,
	0x3a, 0x9e, 0x4d, 0x84, 0xc6, 0x57, 0x53, 0xe9, 0xfb, 0x46, 0xd4, 0x7b, 0xd0, 0xfa, 0x2c, 0xb4,
	0xf7, 0x89, 0xa3, 0x9a, 0xfb, 0xda, 0x70, 0xbc, 0x90, 0x73, 0x7c, 0x9e, 0x47, 0xf9, 0x5a, 0x2a,
	0xfb, 0x49, 0xe0, 0xdc, 0x1a, 0xe2, 0x6a, 0x8a, 0xea, 0xe9, 0x44, 0x1a, 0xb4, 0x1b, 0x39, 0x5a,
	0x49, 0x7e, 0x36, 0xc6, 0x59, 0xb3, 0xe6, 0xa9, 0x7d, 0x08, 0xad, 0x62, 0xa0, 0xa4, 0xd5, 0xeb,
	0xc5, 0x56, 0xcb, 0x16, 0xa3, 0xd0, 0xfc, 0x5b, 0xb0, 0x0a, 0x8d, 0xc4, 0x7b, 0x31, 0xf3, 0xc5,
	0x12, 0xa3, 0xdb, 0x19, 0xa0, 0x31, 0xf3, 0x88, 0x9b, 0xc0, 0xae, 0x22, 0x6e, 0xac, 0xac, 0xf2,
	0xc2, 0x08, 0x93, 0x3d, 0x24, 0x3c, 0x35, 0xd8, 0x7b, 0xa8, 0xa5, 0xd5, 0x72, 0xe5, 0x49, 0x1a,
	0x4f, 0x0c, 0xba, 0x07, 0xcd, 0x09, 0x2e, 0xa4, 0x88, 0xff, 0x6f, 0x82, 0x48, 0x78, 0xee, 0xa0,
	0x57, 0x00, 0x16, 0xa1, 0x2f, 0xb4, 0xf4, 0xa5, 0x5e, 0x66, 0xc0, 0x05, 0x8f, 0xfb, 0x7b, 0x07,
	0x1a, 0xf1, 0xed, 0x18, 0x0a, 0x2d, 0xe8, 0x3e, 0xd4, 0x0f, 0x50, 0xc7, 0x26, 0x2d, 0xfc, 0x9f,
	0xc2, 0xed, 0xb1, 0xbb, 0x9b, 0xee, 0x54, 0x61, 0x56, 0xa1, 0x0f, 0xc0, 0x1a, 0x05, 0x52, 0xbf,
	0xc0, 0xaf, 0xff, 0xf6, 0xfe, 0x1d, 0x74, 0x86, 0xe1, 0xc6, 0xb8, 0xd2, 0xfe, 0x69, 0xab, 0x67,
	0x5f, 0x3b, 0x75, 0xd6, 0x59, 0x85, 0x72, 0xe8, 0x14, 0xc6, 0xe2, 0x10, 0x17, 0xe8, 0x2b, 0xba,
	0x77, 0xcc, 0xcc, 0xa4, 0xb8, 0x97, 0x4f, 0x9c, 0x28, 0x56, 0xa1, 0x4f, 0xc1, 0x3a, 0x40, 0x6d,
	0x96, 0x85, 0x5e, 0x2a, 0x3b, 0x63, 0x29, 0x94, 0x7d, 0xfc, 0x85, 0x63, 0x95, 0xa3, 0x5a, 0x72,
	0xed, 0xef, 0xfc, 0x09, 0x00, 0x00, 0xff, 0xff, 0x90, 0x67, 0x56, 0xb7, 0xfe, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserDataClient is the client API for UserData service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserDataClient interface {
	// Obtains data for a given user ID.
	GetUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error)
	// Initialize data for a new user
	InitNewUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error)
	// Perform a coin transaction on one or more users
	DoCoinTransaction(ctx context.Context, in *CoinTransactionRequest, opts ...grpc.CallOption) (*CoinTransactionResponse, error)
	// Update skill levels for
	UpdateSkillLevels(ctx context.Context, in *UpdateSkillRequest, opts ...grpc.CallOption) (*UpdateSkillResponse, error)
	// GetBalances retrieves balances for one or more users
	GetBalances(ctx context.Context, in *BalancesRequest, opts ...grpc.CallOption) (*BalancesResponse, error)
}

type userDataClient struct {
	cc *grpc.ClientConn
}

func NewUserDataClient(cc *grpc.ClientConn) UserDataClient {
	return &userDataClient{cc}
}

func (c *userDataClient) GetUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/userdata.UserData/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userDataClient) InitNewUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/userdata.UserData/InitNewUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userDataClient) DoCoinTransaction(ctx context.Context, in *CoinTransactionRequest, opts ...grpc.CallOption) (*CoinTransactionResponse, error) {
	out := new(CoinTransactionResponse)
	err := c.cc.Invoke(ctx, "/userdata.UserData/DoCoinTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userDataClient) UpdateSkillLevels(ctx context.Context, in *UpdateSkillRequest, opts ...grpc.CallOption) (*UpdateSkillResponse, error) {
	out := new(UpdateSkillResponse)
	err := c.cc.Invoke(ctx, "/userdata.UserData/UpdateSkillLevels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userDataClient) GetBalances(ctx context.Context, in *BalancesRequest, opts ...grpc.CallOption) (*BalancesResponse, error) {
	out := new(BalancesResponse)
	err := c.cc.Invoke(ctx, "/userdata.UserData/GetBalances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserDataServer is the server API for UserData service.
type UserDataServer interface {
	// Obtains data for a given user ID.
	GetUser(context.Context, *UserRequest) (*UserResponse, error)
	// Initialize data for a new user
	InitNewUser(context.Context, *UserRequest) (*UserResponse, error)
	// Perform a coin transaction on one or more users
	DoCoinTransaction(context.Context, *CoinTransactionRequest) (*CoinTransactionResponse, error)
	// Update skill levels for
	UpdateSkillLevels(context.Context, *UpdateSkillRequest) (*UpdateSkillResponse, error)
	// GetBalances retrieves balances for one or more users
	GetBalances(context.Context, *BalancesRequest) (*BalancesResponse, error)
}

// UnimplementedUserDataServer can be embedded to have forward compatible implementations.
type UnimplementedUserDataServer struct {
}

func (*UnimplementedUserDataServer) GetUser(ctx context.Context, req *UserRequest) (*UserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedUserDataServer) InitNewUser(ctx context.Context, req *UserRequest) (*UserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitNewUser not implemented")
}
func (*UnimplementedUserDataServer) DoCoinTransaction(ctx context.Context, req *CoinTransactionRequest) (*CoinTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoCoinTransaction not implemented")
}
func (*UnimplementedUserDataServer) UpdateSkillLevels(ctx context.Context, req *UpdateSkillRequest) (*UpdateSkillResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSkillLevels not implemented")
}
func (*UnimplementedUserDataServer) GetBalances(ctx context.Context, req *BalancesRequest) (*BalancesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalances not implemented")
}

func RegisterUserDataServer(s *grpc.Server, srv UserDataServer) {
	s.RegisterService(&_UserData_serviceDesc, srv)
}

func _UserData_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserDataServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userdata.UserData/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserDataServer).GetUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserData_InitNewUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserDataServer).InitNewUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userdata.UserData/InitNewUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserDataServer).InitNewUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserData_DoCoinTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CoinTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserDataServer).DoCoinTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userdata.UserData/DoCoinTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserDataServer).DoCoinTransaction(ctx, req.(*CoinTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserData_UpdateSkillLevels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSkillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserDataServer).UpdateSkillLevels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userdata.UserData/UpdateSkillLevels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserDataServer).UpdateSkillLevels(ctx, req.(*UpdateSkillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserData_GetBalances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BalancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserDataServer).GetBalances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userdata.UserData/GetBalances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserDataServer).GetBalances(ctx, req.(*BalancesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserData_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userdata.UserData",
	HandlerType: (*UserDataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _UserData_GetUser_Handler,
		},
		{
			MethodName: "InitNewUser",
			Handler:    _UserData_InitNewUser_Handler,
		},
		{
			MethodName: "DoCoinTransaction",
			Handler:    _UserData_DoCoinTransaction_Handler,
		},
		{
			MethodName: "UpdateSkillLevels",
			Handler:    _UserData_UpdateSkillLevels_Handler,
		},
		{
			MethodName: "GetBalances",
			Handler:    _UserData_GetBalances_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
