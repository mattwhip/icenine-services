// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client.proto

package kafkawebsocket

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Subscribe struct {
	// A map of topics to starting offsets
	TopicOffsetMap       map[string]int64 `protobuf:"bytes,1,rep,name=topicOffsetMap,proto3" json:"topicOffsetMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Subscribe) Reset()         { *m = Subscribe{} }
func (m *Subscribe) String() string { return proto.CompactTextString(m) }
func (*Subscribe) ProtoMessage()    {}
func (*Subscribe) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{0}
}

func (m *Subscribe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscribe.Unmarshal(m, b)
}
func (m *Subscribe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscribe.Marshal(b, m, deterministic)
}
func (m *Subscribe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscribe.Merge(m, src)
}
func (m *Subscribe) XXX_Size() int {
	return xxx_messageInfo_Subscribe.Size(m)
}
func (m *Subscribe) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscribe.DiscardUnknown(m)
}

var xxx_messageInfo_Subscribe proto.InternalMessageInfo

func (m *Subscribe) GetTopicOffsetMap() map[string]int64 {
	if m != nil {
		return m.TopicOffsetMap
	}
	return nil
}

type Unsubscribe struct {
	// An list of topics to be removed from the subscriptions list
	Topics               []string `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Unsubscribe) Reset()         { *m = Unsubscribe{} }
func (m *Unsubscribe) String() string { return proto.CompactTextString(m) }
func (*Unsubscribe) ProtoMessage()    {}
func (*Unsubscribe) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{1}
}

func (m *Unsubscribe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Unsubscribe.Unmarshal(m, b)
}
func (m *Unsubscribe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Unsubscribe.Marshal(b, m, deterministic)
}
func (m *Unsubscribe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Unsubscribe.Merge(m, src)
}
func (m *Unsubscribe) XXX_Size() int {
	return xxx_messageInfo_Unsubscribe.Size(m)
}
func (m *Unsubscribe) XXX_DiscardUnknown() {
	xxx_messageInfo_Unsubscribe.DiscardUnknown(m)
}

var xxx_messageInfo_Unsubscribe proto.InternalMessageInfo

func (m *Unsubscribe) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

type SubscriptionsUpdated struct {
	// The full map of updated subscribed topics and their byte values
	Topics               map[string][]byte `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SubscriptionsUpdated) Reset()         { *m = SubscriptionsUpdated{} }
func (m *SubscriptionsUpdated) String() string { return proto.CompactTextString(m) }
func (*SubscriptionsUpdated) ProtoMessage()    {}
func (*SubscriptionsUpdated) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{2}
}

func (m *SubscriptionsUpdated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionsUpdated.Unmarshal(m, b)
}
func (m *SubscriptionsUpdated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionsUpdated.Marshal(b, m, deterministic)
}
func (m *SubscriptionsUpdated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionsUpdated.Merge(m, src)
}
func (m *SubscriptionsUpdated) XXX_Size() int {
	return xxx_messageInfo_SubscriptionsUpdated.Size(m)
}
func (m *SubscriptionsUpdated) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionsUpdated.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionsUpdated proto.InternalMessageInfo

func (m *SubscriptionsUpdated) GetTopics() map[string][]byte {
	if m != nil {
		return m.Topics
	}
	return nil
}

func init() {
	proto.RegisterType((*Subscribe)(nil), "kafkawebsocket.Subscribe")
	proto.RegisterMapType((map[string]int64)(nil), "kafkawebsocket.Subscribe.TopicOffsetMapEntry")
	proto.RegisterType((*Unsubscribe)(nil), "kafkawebsocket.Unsubscribe")
	proto.RegisterType((*SubscriptionsUpdated)(nil), "kafkawebsocket.SubscriptionsUpdated")
	proto.RegisterMapType((map[string][]byte)(nil), "kafkawebsocket.SubscriptionsUpdated.TopicsEntry")
}

func init() { proto.RegisterFile("client.proto", fileDescriptor_014de31d7ac8c57c) }

var fileDescriptor_014de31d7ac8c57c = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xc9, 0x4c,
	0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xcb, 0x4e, 0x4c, 0xcb, 0x4e, 0x2c,
	0x4f, 0x4d, 0x2a, 0xce, 0x4f, 0xce, 0x4e, 0x2d, 0x51, 0x5a, 0xca, 0xc8, 0xc5, 0x19, 0x5c, 0x9a,
	0x54, 0x9c, 0x5c, 0x94, 0x99, 0x94, 0x2a, 0x14, 0xca, 0xc5, 0x57, 0x92, 0x5f, 0x90, 0x99, 0xec,
	0x9f, 0x96, 0x56, 0x9c, 0x5a, 0xe2, 0x9b, 0x58, 0x20, 0xc1, 0xa8, 0xc0, 0xac, 0xc1, 0x6d, 0xa4,
	0xab, 0x87, 0xaa, 0x4d, 0x0f, 0xae, 0x45, 0x2f, 0x04, 0x45, 0xbd, 0x6b, 0x5e, 0x49, 0x51, 0x65,
	0x10, 0x9a, 0x21, 0x52, 0x8e, 0x5c, 0xc2, 0x58, 0x94, 0x09, 0x09, 0x70, 0x31, 0x67, 0xa7, 0x56,
	0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0x98, 0x42, 0x22, 0x5c, 0xac, 0x65, 0x89, 0x39,
	0xa5, 0xa9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xcc, 0x41, 0x10, 0x8e, 0x15, 0x93, 0x05, 0xa3, 0x92,
	0x2a, 0x17, 0x77, 0x68, 0x5e, 0x31, 0xdc, 0xa1, 0x62, 0x5c, 0x6c, 0x60, 0x3b, 0x8a, 0xc1, 0x0e,
	0xe4, 0x0c, 0x82, 0xf2, 0x94, 0x66, 0x33, 0x72, 0x89, 0x40, 0xdd, 0x56, 0x50, 0x92, 0x99, 0x9f,
	0x57, 0x1c, 0x5a, 0x90, 0x92, 0x58, 0x92, 0x9a, 0x22, 0xe4, 0x81, 0xa2, 0x81, 0xdb, 0xc8, 0x00,
	0x87, 0x8f, 0x50, 0x74, 0x41, 0x3c, 0x57, 0x0c, 0xf1, 0x14, 0x54, 0xbf, 0x94, 0x25, 0x17, 0x37,
	0x92, 0x30, 0x21, 0x4f, 0xf0, 0x20, 0x79, 0x22, 0x89, 0x0d, 0x1c, 0x07, 0xc6, 0x80, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xd3, 0x7e, 0x89, 0x76, 0x93, 0x01, 0x00, 0x00,
}
