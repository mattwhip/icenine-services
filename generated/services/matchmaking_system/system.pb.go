// Code generated by protoc-gen-go. DO NOT EDIT.
// source: system.proto

package matchmakingsystem

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A request for user data
type AddUserGroupTicketsRequest struct {
	// The collection of user group tickets to add
	Tickets              []*UserGroupTicket `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AddUserGroupTicketsRequest) Reset()         { *m = AddUserGroupTicketsRequest{} }
func (m *AddUserGroupTicketsRequest) String() string { return proto.CompactTextString(m) }
func (*AddUserGroupTicketsRequest) ProtoMessage()    {}
func (*AddUserGroupTicketsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{0}
}

func (m *AddUserGroupTicketsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserGroupTicketsRequest.Unmarshal(m, b)
}
func (m *AddUserGroupTicketsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserGroupTicketsRequest.Marshal(b, m, deterministic)
}
func (m *AddUserGroupTicketsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserGroupTicketsRequest.Merge(m, src)
}
func (m *AddUserGroupTicketsRequest) XXX_Size() int {
	return xxx_messageInfo_AddUserGroupTicketsRequest.Size(m)
}
func (m *AddUserGroupTicketsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserGroupTicketsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserGroupTicketsRequest proto.InternalMessageInfo

func (m *AddUserGroupTicketsRequest) GetTickets() []*UserGroupTicket {
	if m != nil {
		return m.Tickets
	}
	return nil
}

// A response for an AddTicketsRequest
type AddUserGroupTicketsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUserGroupTicketsResponse) Reset()         { *m = AddUserGroupTicketsResponse{} }
func (m *AddUserGroupTicketsResponse) String() string { return proto.CompactTextString(m) }
func (*AddUserGroupTicketsResponse) ProtoMessage()    {}
func (*AddUserGroupTicketsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{1}
}

func (m *AddUserGroupTicketsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserGroupTicketsResponse.Unmarshal(m, b)
}
func (m *AddUserGroupTicketsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserGroupTicketsResponse.Marshal(b, m, deterministic)
}
func (m *AddUserGroupTicketsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserGroupTicketsResponse.Merge(m, src)
}
func (m *AddUserGroupTicketsResponse) XXX_Size() int {
	return xxx_messageInfo_AddUserGroupTicketsResponse.Size(m)
}
func (m *AddUserGroupTicketsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserGroupTicketsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserGroupTicketsResponse proto.InternalMessageInfo

// A ticket representing a matchmaking user group and a snapshot of salient matchmaking data
type UserGroupTicket struct {
	Scopes               []string `protobuf:"bytes,1,rep,name=scopes,proto3" json:"scopes,omitempty"`
	ID                   string   `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	GameInstanceHistory  []string `protobuf:"bytes,3,rep,name=gameInstanceHistory,proto3" json:"gameInstanceHistory,omitempty"`
	Users                []*User  `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
	UnixQueueTimestamp   int64    `protobuf:"varint,5,opt,name=unixQueueTimestamp,proto3" json:"unixQueueTimestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserGroupTicket) Reset()         { *m = UserGroupTicket{} }
func (m *UserGroupTicket) String() string { return proto.CompactTextString(m) }
func (*UserGroupTicket) ProtoMessage()    {}
func (*UserGroupTicket) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{2}
}

func (m *UserGroupTicket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserGroupTicket.Unmarshal(m, b)
}
func (m *UserGroupTicket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserGroupTicket.Marshal(b, m, deterministic)
}
func (m *UserGroupTicket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserGroupTicket.Merge(m, src)
}
func (m *UserGroupTicket) XXX_Size() int {
	return xxx_messageInfo_UserGroupTicket.Size(m)
}
func (m *UserGroupTicket) XXX_DiscardUnknown() {
	xxx_messageInfo_UserGroupTicket.DiscardUnknown(m)
}

var xxx_messageInfo_UserGroupTicket proto.InternalMessageInfo

func (m *UserGroupTicket) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *UserGroupTicket) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *UserGroupTicket) GetGameInstanceHistory() []string {
	if m != nil {
		return m.GameInstanceHistory
	}
	return nil
}

func (m *UserGroupTicket) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *UserGroupTicket) GetUnixQueueTimestamp() int64 {
	if m != nil {
		return m.UnixQueueTimestamp
	}
	return 0
}

// A single user in the matchmaking system
type User struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ServerToUserTopic    string   `protobuf:"bytes,2,opt,name=serverToUserTopic,proto3" json:"serverToUserTopic,omitempty"`
	GameData             *any.Any `protobuf:"bytes,3,opt,name=gameData,proto3" json:"gameData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{3}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *User) GetServerToUserTopic() string {
	if m != nil {
		return m.ServerToUserTopic
	}
	return ""
}

func (m *User) GetGameData() *any.Any {
	if m != nil {
		return m.GameData
	}
	return nil
}

// A ticket representing an active gameinstance to be considered as the target for matchmaking
type GameInstanceTicket struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Capacity             int32    `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Scope                string   `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	Users                []*User  `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameInstanceTicket) Reset()         { *m = GameInstanceTicket{} }
func (m *GameInstanceTicket) String() string { return proto.CompactTextString(m) }
func (*GameInstanceTicket) ProtoMessage()    {}
func (*GameInstanceTicket) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{4}
}

func (m *GameInstanceTicket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameInstanceTicket.Unmarshal(m, b)
}
func (m *GameInstanceTicket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameInstanceTicket.Marshal(b, m, deterministic)
}
func (m *GameInstanceTicket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameInstanceTicket.Merge(m, src)
}
func (m *GameInstanceTicket) XXX_Size() int {
	return xxx_messageInfo_GameInstanceTicket.Size(m)
}
func (m *GameInstanceTicket) XXX_DiscardUnknown() {
	xxx_messageInfo_GameInstanceTicket.DiscardUnknown(m)
}

var xxx_messageInfo_GameInstanceTicket proto.InternalMessageInfo

func (m *GameInstanceTicket) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *GameInstanceTicket) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *GameInstanceTicket) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *GameInstanceTicket) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

// A request to remove tickets from the director's list of tickets for match consideration
type RemoveUserGroupTicketsRequest struct {
	GroupIDs             []string `protobuf:"bytes,1,rep,name=groupIDs,proto3" json:"groupIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveUserGroupTicketsRequest) Reset()         { *m = RemoveUserGroupTicketsRequest{} }
func (m *RemoveUserGroupTicketsRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveUserGroupTicketsRequest) ProtoMessage()    {}
func (*RemoveUserGroupTicketsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{5}
}

func (m *RemoveUserGroupTicketsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveUserGroupTicketsRequest.Unmarshal(m, b)
}
func (m *RemoveUserGroupTicketsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveUserGroupTicketsRequest.Marshal(b, m, deterministic)
}
func (m *RemoveUserGroupTicketsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveUserGroupTicketsRequest.Merge(m, src)
}
func (m *RemoveUserGroupTicketsRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveUserGroupTicketsRequest.Size(m)
}
func (m *RemoveUserGroupTicketsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveUserGroupTicketsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveUserGroupTicketsRequest proto.InternalMessageInfo

func (m *RemoveUserGroupTicketsRequest) GetGroupIDs() []string {
	if m != nil {
		return m.GroupIDs
	}
	return nil
}

// A reponse for a RemoveTicketsRequest
type RemoveUserGroupTicketsResponse struct {
	RemovedGroupIDs      []string `protobuf:"bytes,1,rep,name=removedGroupIDs,proto3" json:"removedGroupIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveUserGroupTicketsResponse) Reset()         { *m = RemoveUserGroupTicketsResponse{} }
func (m *RemoveUserGroupTicketsResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveUserGroupTicketsResponse) ProtoMessage()    {}
func (*RemoveUserGroupTicketsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{6}
}

func (m *RemoveUserGroupTicketsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveUserGroupTicketsResponse.Unmarshal(m, b)
}
func (m *RemoveUserGroupTicketsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveUserGroupTicketsResponse.Marshal(b, m, deterministic)
}
func (m *RemoveUserGroupTicketsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveUserGroupTicketsResponse.Merge(m, src)
}
func (m *RemoveUserGroupTicketsResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveUserGroupTicketsResponse.Size(m)
}
func (m *RemoveUserGroupTicketsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveUserGroupTicketsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveUserGroupTicketsResponse proto.InternalMessageInfo

func (m *RemoveUserGroupTicketsResponse) GetRemovedGroupIDs() []string {
	if m != nil {
		return m.RemovedGroupIDs
	}
	return nil
}

// A message intended to notify the director of a game instance vacancy update
type VacancyUpdate struct {
	GameInstanceID       string   `protobuf:"bytes,1,opt,name=gameInstanceID,proto3" json:"gameInstanceID,omitempty"`
	Scope                string   `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	IsGameInstanceAlive  bool     `protobuf:"varint,3,opt,name=isGameInstanceAlive,proto3" json:"isGameInstanceAlive,omitempty"`
	RemainingUserIDs     []string `protobuf:"bytes,4,rep,name=remainingUserIDs,proto3" json:"remainingUserIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VacancyUpdate) Reset()         { *m = VacancyUpdate{} }
func (m *VacancyUpdate) String() string { return proto.CompactTextString(m) }
func (*VacancyUpdate) ProtoMessage()    {}
func (*VacancyUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{7}
}

func (m *VacancyUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VacancyUpdate.Unmarshal(m, b)
}
func (m *VacancyUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VacancyUpdate.Marshal(b, m, deterministic)
}
func (m *VacancyUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VacancyUpdate.Merge(m, src)
}
func (m *VacancyUpdate) XXX_Size() int {
	return xxx_messageInfo_VacancyUpdate.Size(m)
}
func (m *VacancyUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_VacancyUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_VacancyUpdate proto.InternalMessageInfo

func (m *VacancyUpdate) GetGameInstanceID() string {
	if m != nil {
		return m.GameInstanceID
	}
	return ""
}

func (m *VacancyUpdate) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *VacancyUpdate) GetIsGameInstanceAlive() bool {
	if m != nil {
		return m.IsGameInstanceAlive
	}
	return false
}

func (m *VacancyUpdate) GetRemainingUserIDs() []string {
	if m != nil {
		return m.RemainingUserIDs
	}
	return nil
}

// A request to find matches for a collection of tickets
type FindMatchesRequest struct {
	UserGroupTickets     []*UserGroupTicket    `protobuf:"bytes,1,rep,name=userGroupTickets,proto3" json:"userGroupTickets,omitempty"`
	GameInstanceTickets  []*GameInstanceTicket `protobuf:"bytes,2,rep,name=gameInstanceTickets,proto3" json:"gameInstanceTickets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *FindMatchesRequest) Reset()         { *m = FindMatchesRequest{} }
func (m *FindMatchesRequest) String() string { return proto.CompactTextString(m) }
func (*FindMatchesRequest) ProtoMessage()    {}
func (*FindMatchesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{8}
}

func (m *FindMatchesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMatchesRequest.Unmarshal(m, b)
}
func (m *FindMatchesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMatchesRequest.Marshal(b, m, deterministic)
}
func (m *FindMatchesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMatchesRequest.Merge(m, src)
}
func (m *FindMatchesRequest) XXX_Size() int {
	return xxx_messageInfo_FindMatchesRequest.Size(m)
}
func (m *FindMatchesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMatchesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindMatchesRequest proto.InternalMessageInfo

func (m *FindMatchesRequest) GetUserGroupTickets() []*UserGroupTicket {
	if m != nil {
		return m.UserGroupTickets
	}
	return nil
}

func (m *FindMatchesRequest) GetGameInstanceTickets() []*GameInstanceTicket {
	if m != nil {
		return m.GameInstanceTickets
	}
	return nil
}

// A response for a FindMatchesRequest
type FindMatchesResponse struct {
	Matches              []*Match `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMatchesResponse) Reset()         { *m = FindMatchesResponse{} }
func (m *FindMatchesResponse) String() string { return proto.CompactTextString(m) }
func (*FindMatchesResponse) ProtoMessage()    {}
func (*FindMatchesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{9}
}

func (m *FindMatchesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMatchesResponse.Unmarshal(m, b)
}
func (m *FindMatchesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMatchesResponse.Marshal(b, m, deterministic)
}
func (m *FindMatchesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMatchesResponse.Merge(m, src)
}
func (m *FindMatchesResponse) XXX_Size() int {
	return xxx_messageInfo_FindMatchesResponse.Size(m)
}
func (m *FindMatchesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMatchesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindMatchesResponse proto.InternalMessageInfo

func (m *FindMatchesResponse) GetMatches() []*Match {
	if m != nil {
		return m.Matches
	}
	return nil
}

// A match for a single game, containing matched tickets, bot provision specs, and target game
// instance information
type Match struct {
	UserGroupTickets   []*UserGroupTicket  `protobuf:"bytes,1,rep,name=userGroupTickets,proto3" json:"userGroupTickets,omitempty"`
	BotProvisionParams *BotProvisionParams `protobuf:"bytes,2,opt,name=botProvisionParams,proto3" json:"botProvisionParams,omitempty"`
	Scope              string              `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	// Types that are valid to be assigned to GameInstance:
	//	*Match_UseExisting
	//	*Match_CreateNew
	GameInstance         isMatch_GameInstance `protobuf_oneof:"gameInstance"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Match) Reset()         { *m = Match{} }
func (m *Match) String() string { return proto.CompactTextString(m) }
func (*Match) ProtoMessage()    {}
func (*Match) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{10}
}

func (m *Match) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Match.Unmarshal(m, b)
}
func (m *Match) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Match.Marshal(b, m, deterministic)
}
func (m *Match) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Match.Merge(m, src)
}
func (m *Match) XXX_Size() int {
	return xxx_messageInfo_Match.Size(m)
}
func (m *Match) XXX_DiscardUnknown() {
	xxx_messageInfo_Match.DiscardUnknown(m)
}

var xxx_messageInfo_Match proto.InternalMessageInfo

func (m *Match) GetUserGroupTickets() []*UserGroupTicket {
	if m != nil {
		return m.UserGroupTickets
	}
	return nil
}

func (m *Match) GetBotProvisionParams() *BotProvisionParams {
	if m != nil {
		return m.BotProvisionParams
	}
	return nil
}

func (m *Match) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

type isMatch_GameInstance interface {
	isMatch_GameInstance()
}

type Match_UseExisting struct {
	UseExisting *GameInstanceTicket `protobuf:"bytes,4,opt,name=useExisting,proto3,oneof"`
}

type Match_CreateNew struct {
	CreateNew *GameInstanceCreationParams `protobuf:"bytes,5,opt,name=createNew,proto3,oneof"`
}

func (*Match_UseExisting) isMatch_GameInstance() {}

func (*Match_CreateNew) isMatch_GameInstance() {}

func (m *Match) GetGameInstance() isMatch_GameInstance {
	if m != nil {
		return m.GameInstance
	}
	return nil
}

func (m *Match) GetUseExisting() *GameInstanceTicket {
	if x, ok := m.GetGameInstance().(*Match_UseExisting); ok {
		return x.UseExisting
	}
	return nil
}

func (m *Match) GetCreateNew() *GameInstanceCreationParams {
	if x, ok := m.GetGameInstance().(*Match_CreateNew); ok {
		return x.CreateNew
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Match) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Match_UseExisting)(nil),
		(*Match_CreateNew)(nil),
	}
}

// A BotProvisionParams holds a total count of all bots tht will be provisioned and arbitrary
// information describing game-specific information about how this set of bots should be provisioned
type BotProvisionParams struct {
	TotalBots            int32    `protobuf:"varint,1,opt,name=totalBots,proto3" json:"totalBots,omitempty"`
	Params               *any.Any `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BotProvisionParams) Reset()         { *m = BotProvisionParams{} }
func (m *BotProvisionParams) String() string { return proto.CompactTextString(m) }
func (*BotProvisionParams) ProtoMessage()    {}
func (*BotProvisionParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{11}
}

func (m *BotProvisionParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BotProvisionParams.Unmarshal(m, b)
}
func (m *BotProvisionParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BotProvisionParams.Marshal(b, m, deterministic)
}
func (m *BotProvisionParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotProvisionParams.Merge(m, src)
}
func (m *BotProvisionParams) XXX_Size() int {
	return xxx_messageInfo_BotProvisionParams.Size(m)
}
func (m *BotProvisionParams) XXX_DiscardUnknown() {
	xxx_messageInfo_BotProvisionParams.DiscardUnknown(m)
}

var xxx_messageInfo_BotProvisionParams proto.InternalMessageInfo

func (m *BotProvisionParams) GetTotalBots() int32 {
	if m != nil {
		return m.TotalBots
	}
	return 0
}

func (m *BotProvisionParams) GetParams() *any.Any {
	if m != nil {
		return m.Params
	}
	return nil
}

// Parameters for the creation of a new game instance
type GameInstanceCreationParams struct {
	Capacity             int32    `protobuf:"varint,1,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Params               *any.Any `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameInstanceCreationParams) Reset()         { *m = GameInstanceCreationParams{} }
func (m *GameInstanceCreationParams) String() string { return proto.CompactTextString(m) }
func (*GameInstanceCreationParams) ProtoMessage()    {}
func (*GameInstanceCreationParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{12}
}

func (m *GameInstanceCreationParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameInstanceCreationParams.Unmarshal(m, b)
}
func (m *GameInstanceCreationParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameInstanceCreationParams.Marshal(b, m, deterministic)
}
func (m *GameInstanceCreationParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameInstanceCreationParams.Merge(m, src)
}
func (m *GameInstanceCreationParams) XXX_Size() int {
	return xxx_messageInfo_GameInstanceCreationParams.Size(m)
}
func (m *GameInstanceCreationParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GameInstanceCreationParams.DiscardUnknown(m)
}

var xxx_messageInfo_GameInstanceCreationParams proto.InternalMessageInfo

func (m *GameInstanceCreationParams) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *GameInstanceCreationParams) GetParams() *any.Any {
	if m != nil {
		return m.Params
	}
	return nil
}

// A request to invoke a match
type InvokeMatchRequest struct {
	Match                *Match   `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvokeMatchRequest) Reset()         { *m = InvokeMatchRequest{} }
func (m *InvokeMatchRequest) String() string { return proto.CompactTextString(m) }
func (*InvokeMatchRequest) ProtoMessage()    {}
func (*InvokeMatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{13}
}

func (m *InvokeMatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvokeMatchRequest.Unmarshal(m, b)
}
func (m *InvokeMatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvokeMatchRequest.Marshal(b, m, deterministic)
}
func (m *InvokeMatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvokeMatchRequest.Merge(m, src)
}
func (m *InvokeMatchRequest) XXX_Size() int {
	return xxx_messageInfo_InvokeMatchRequest.Size(m)
}
func (m *InvokeMatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InvokeMatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InvokeMatchRequest proto.InternalMessageInfo

func (m *InvokeMatchRequest) GetMatch() *Match {
	if m != nil {
		return m.Match
	}
	return nil
}

// A response for a InvokeMatchRequest
type InvokeMatchResponse struct {
	// Types that are valid to be assigned to Result:
	//	*InvokeMatchResponse_Success
	//	*InvokeMatchResponse_Failure
	Result               isInvokeMatchResponse_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *InvokeMatchResponse) Reset()         { *m = InvokeMatchResponse{} }
func (m *InvokeMatchResponse) String() string { return proto.CompactTextString(m) }
func (*InvokeMatchResponse) ProtoMessage()    {}
func (*InvokeMatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{14}
}

func (m *InvokeMatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvokeMatchResponse.Unmarshal(m, b)
}
func (m *InvokeMatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvokeMatchResponse.Marshal(b, m, deterministic)
}
func (m *InvokeMatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvokeMatchResponse.Merge(m, src)
}
func (m *InvokeMatchResponse) XXX_Size() int {
	return xxx_messageInfo_InvokeMatchResponse.Size(m)
}
func (m *InvokeMatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InvokeMatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InvokeMatchResponse proto.InternalMessageInfo

type isInvokeMatchResponse_Result interface {
	isInvokeMatchResponse_Result()
}

type InvokeMatchResponse_Success struct {
	Success *InvocationSuccess `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type InvokeMatchResponse_Failure struct {
	Failure *InvocationFailure `protobuf:"bytes,2,opt,name=failure,proto3,oneof"`
}

func (*InvokeMatchResponse_Success) isInvokeMatchResponse_Result() {}

func (*InvokeMatchResponse_Failure) isInvokeMatchResponse_Result() {}

func (m *InvokeMatchResponse) GetResult() isInvokeMatchResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *InvokeMatchResponse) GetSuccess() *InvocationSuccess {
	if x, ok := m.GetResult().(*InvokeMatchResponse_Success); ok {
		return x.Success
	}
	return nil
}

func (m *InvokeMatchResponse) GetFailure() *InvocationFailure {
	if x, ok := m.GetResult().(*InvokeMatchResponse_Failure); ok {
		return x.Failure
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*InvokeMatchResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*InvokeMatchResponse_Success)(nil),
		(*InvokeMatchResponse_Failure)(nil),
	}
}

// A wrapper for invocation success data
type InvocationSuccess struct {
	GameInstanceTicket   *GameInstanceTicket `protobuf:"bytes,1,opt,name=gameInstanceTicket,proto3" json:"gameInstanceTicket,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *InvocationSuccess) Reset()         { *m = InvocationSuccess{} }
func (m *InvocationSuccess) String() string { return proto.CompactTextString(m) }
func (*InvocationSuccess) ProtoMessage()    {}
func (*InvocationSuccess) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{15}
}

func (m *InvocationSuccess) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvocationSuccess.Unmarshal(m, b)
}
func (m *InvocationSuccess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvocationSuccess.Marshal(b, m, deterministic)
}
func (m *InvocationSuccess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvocationSuccess.Merge(m, src)
}
func (m *InvocationSuccess) XXX_Size() int {
	return xxx_messageInfo_InvocationSuccess.Size(m)
}
func (m *InvocationSuccess) XXX_DiscardUnknown() {
	xxx_messageInfo_InvocationSuccess.DiscardUnknown(m)
}

var xxx_messageInfo_InvocationSuccess proto.InternalMessageInfo

func (m *InvocationSuccess) GetGameInstanceTicket() *GameInstanceTicket {
	if m != nil {
		return m.GameInstanceTicket
	}
	return nil
}

// A wrapper for invocation failure data
type InvocationFailure struct {
	ErrorCode            int32    `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvocationFailure) Reset()         { *m = InvocationFailure{} }
func (m *InvocationFailure) String() string { return proto.CompactTextString(m) }
func (*InvocationFailure) ProtoMessage()    {}
func (*InvocationFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor_86a7260ebdc12f47, []int{16}
}

func (m *InvocationFailure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvocationFailure.Unmarshal(m, b)
}
func (m *InvocationFailure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvocationFailure.Marshal(b, m, deterministic)
}
func (m *InvocationFailure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvocationFailure.Merge(m, src)
}
func (m *InvocationFailure) XXX_Size() int {
	return xxx_messageInfo_InvocationFailure.Size(m)
}
func (m *InvocationFailure) XXX_DiscardUnknown() {
	xxx_messageInfo_InvocationFailure.DiscardUnknown(m)
}

var xxx_messageInfo_InvocationFailure proto.InternalMessageInfo

func (m *InvocationFailure) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *InvocationFailure) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*AddUserGroupTicketsRequest)(nil), "matchmakingsystem.AddUserGroupTicketsRequest")
	proto.RegisterType((*AddUserGroupTicketsResponse)(nil), "matchmakingsystem.AddUserGroupTicketsResponse")
	proto.RegisterType((*UserGroupTicket)(nil), "matchmakingsystem.UserGroupTicket")
	proto.RegisterType((*User)(nil), "matchmakingsystem.User")
	proto.RegisterType((*GameInstanceTicket)(nil), "matchmakingsystem.GameInstanceTicket")
	proto.RegisterType((*RemoveUserGroupTicketsRequest)(nil), "matchmakingsystem.RemoveUserGroupTicketsRequest")
	proto.RegisterType((*RemoveUserGroupTicketsResponse)(nil), "matchmakingsystem.RemoveUserGroupTicketsResponse")
	proto.RegisterType((*VacancyUpdate)(nil), "matchmakingsystem.VacancyUpdate")
	proto.RegisterType((*FindMatchesRequest)(nil), "matchmakingsystem.FindMatchesRequest")
	proto.RegisterType((*FindMatchesResponse)(nil), "matchmakingsystem.FindMatchesResponse")
	proto.RegisterType((*Match)(nil), "matchmakingsystem.Match")
	proto.RegisterType((*BotProvisionParams)(nil), "matchmakingsystem.BotProvisionParams")
	proto.RegisterType((*GameInstanceCreationParams)(nil), "matchmakingsystem.GameInstanceCreationParams")
	proto.RegisterType((*InvokeMatchRequest)(nil), "matchmakingsystem.InvokeMatchRequest")
	proto.RegisterType((*InvokeMatchResponse)(nil), "matchmakingsystem.InvokeMatchResponse")
	proto.RegisterType((*InvocationSuccess)(nil), "matchmakingsystem.InvocationSuccess")
	proto.RegisterType((*InvocationFailure)(nil), "matchmakingsystem.InvocationFailure")
}

func init() { proto.RegisterFile("system.proto", fileDescriptor_86a7260ebdc12f47) }

var fileDescriptor_86a7260ebdc12f47 = []byte{
	// 894 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x51, 0x6f, 0x1b, 0x45,
	0x10, 0xf6, 0x39, 0x71, 0x62, 0x8f, 0x43, 0xda, 0xac, 0xab, 0x62, 0x0c, 0x45, 0xd1, 0x0a, 0x2a,
	0x0b, 0xb5, 0xd7, 0x60, 0x1e, 0xe1, 0x81, 0xa4, 0xa6, 0x89, 0x91, 0x52, 0x95, 0x25, 0x01, 0x89,
	0x07, 0xc4, 0xe6, 0x3c, 0x31, 0x4b, 0x7c, 0xb7, 0xc7, 0xee, 0x9e, 0xa9, 0x9f, 0x78, 0x40, 0xfc,
	0x12, 0x1e, 0xf9, 0x0d, 0xfc, 0x01, 0x7e, 0x0c, 0xbf, 0x01, 0xdd, 0xde, 0x9d, 0x73, 0xf6, 0xad,
	0xd3, 0x44, 0xea, 0xe3, 0xce, 0x7e, 0xf3, 0xcd, 0xcc, 0xb7, 0x33, 0x73, 0x07, 0x3b, 0x7a, 0xae,
	0x0d, 0x86, 0x7e, 0xac, 0xa4, 0x91, 0x64, 0x2f, 0xe4, 0x26, 0xf8, 0x39, 0xe4, 0x57, 0x22, 0x9a,
	0x64, 0x17, 0xbd, 0xf7, 0x26, 0x52, 0x4e, 0xa6, 0xf8, 0xcc, 0x02, 0x2e, 0x92, 0xcb, 0x67, 0x3c,
	0x9a, 0x67, 0x68, 0xfa, 0x03, 0xf4, 0x0e, 0xc7, 0xe3, 0x73, 0x8d, 0xea, 0x58, 0xc9, 0x24, 0x3e,
	0x13, 0xc1, 0x15, 0x1a, 0xcd, 0xf0, 0xd7, 0x04, 0xb5, 0x21, 0x5f, 0xc0, 0xb6, 0xc9, 0x2c, 0x5d,
	0x6f, 0x7f, 0xa3, 0xdf, 0x1e, 0x50, 0xbf, 0xc2, 0xee, 0xaf, 0x38, 0xb3, 0xc2, 0x85, 0x3e, 0x82,
	0xf7, 0x9d, 0xdc, 0x3a, 0x96, 0x91, 0x46, 0xfa, 0xaf, 0x07, 0xf7, 0x56, 0x2e, 0xc9, 0x43, 0xd8,
	0xd2, 0x81, 0x8c, 0x31, 0x8b, 0xd7, 0x62, 0xf9, 0x89, 0xec, 0x42, 0x7d, 0x34, 0xec, 0xd6, 0xf7,
	0xbd, 0x7e, 0x8b, 0xd5, 0x47, 0x43, 0x72, 0x00, 0x9d, 0x09, 0x0f, 0x71, 0x14, 0x69, 0xc3, 0xa3,
	0x00, 0x4f, 0x84, 0x36, 0x52, 0xcd, 0xbb, 0x1b, 0xd6, 0xc9, 0x75, 0x45, 0x9e, 0x42, 0x23, 0xd1,
	0xa8, 0x74, 0x77, 0xd3, 0x16, 0xf2, 0xee, 0x9a, 0x42, 0x58, 0x86, 0x22, 0x3e, 0x90, 0x24, 0x12,
	0xaf, 0xbf, 0x49, 0x30, 0xc1, 0x33, 0x11, 0xa2, 0x36, 0x3c, 0x8c, 0xbb, 0x8d, 0x7d, 0xaf, 0xbf,
	0xc1, 0x1c, 0x37, 0x74, 0x06, 0x9b, 0xa9, 0x7b, 0x9e, 0xa8, 0xb7, 0x48, 0xf4, 0x09, 0xec, 0x69,
	0x54, 0x33, 0x54, 0x67, 0x32, 0xbd, 0x3f, 0x93, 0xb1, 0x08, 0xf2, 0x3a, 0xaa, 0x17, 0xe4, 0x00,
	0x9a, 0x69, 0xee, 0x43, 0x6e, 0x78, 0x77, 0x63, 0xdf, 0xeb, 0xb7, 0x07, 0x0f, 0xfc, 0xec, 0xed,
	0xfc, 0xe2, 0xed, 0xfc, 0xc3, 0x68, 0xce, 0x16, 0x28, 0xfa, 0xa7, 0x07, 0xe4, 0xb8, 0x54, 0x6e,
	0xae, 0xe3, 0x6a, 0x1a, 0x3d, 0x68, 0x06, 0x3c, 0xe6, 0x81, 0x30, 0x73, 0x1b, 0xbd, 0xc1, 0x16,
	0x67, 0xf2, 0x00, 0x1a, 0x56, 0x65, 0x1b, 0xb1, 0xc5, 0xb2, 0xc3, 0x1d, 0xf5, 0xa2, 0x9f, 0xc3,
	0x23, 0x86, 0xa1, 0x9c, 0xe1, 0xba, 0x56, 0xea, 0x41, 0x73, 0x92, 0x9a, 0x47, 0xc3, 0xe2, 0x6d,
	0x17, 0x67, 0xfa, 0x35, 0x7c, 0xb8, 0xce, 0x39, 0xeb, 0x15, 0xd2, 0x87, 0x7b, 0xca, 0x22, 0xc6,
	0xc7, 0xcb, 0x24, 0xab, 0x66, 0xfa, 0xb7, 0x07, 0xef, 0x7c, 0xc7, 0x03, 0x1e, 0x05, 0xf3, 0xf3,
	0x78, 0xcc, 0x0d, 0x92, 0xc7, 0xb0, 0x5b, 0x6e, 0x88, 0x85, 0x2e, 0x2b, 0xd6, 0x6b, 0x1d, 0xea,
	0x65, 0x1d, 0x0e, 0xa0, 0x23, 0x74, 0x59, 0xe1, 0xc3, 0xa9, 0x98, 0x65, 0x5a, 0x35, 0x99, 0xeb,
	0x8a, 0x7c, 0x02, 0xf7, 0x15, 0x86, 0x5c, 0x44, 0x22, 0x9a, 0xa4, 0x05, 0xa5, 0xc9, 0x6e, 0xda,
	0x64, 0x2b, 0x76, 0xfa, 0x8f, 0x07, 0xe4, 0x85, 0x88, 0xc6, 0xa7, 0xa9, 0xb8, 0xb8, 0x10, 0xeb,
	0x25, 0xdc, 0x4f, 0x56, 0xa4, 0xb8, 0xc3, 0x00, 0x56, 0x7c, 0xc9, 0xf7, 0xcb, 0xe3, 0x52, 0x50,
	0xd6, 0x2d, 0xe5, 0xc7, 0x0e, 0xca, 0x6a, 0x4b, 0x31, 0x17, 0x03, 0x1d, 0x41, 0x67, 0x29, 0xfd,
	0xfc, 0xb9, 0x06, 0xb0, 0x1d, 0x66, 0xa6, 0x3c, 0xed, 0xae, 0x23, 0x86, 0x75, 0x62, 0x05, 0x90,
	0xfe, 0x57, 0x87, 0x86, 0x35, 0xbd, 0xf5, 0xea, 0xcf, 0x81, 0x5c, 0x48, 0xf3, 0x4a, 0xc9, 0x99,
	0xd0, 0x42, 0x46, 0xaf, 0xb8, 0xe2, 0xa1, 0xb6, 0xaf, 0xec, 0x2e, 0xfe, 0xa8, 0x02, 0x66, 0x0e,
	0x82, 0x35, 0x73, 0x33, 0x82, 0x76, 0xa2, 0xf1, 0xab, 0xd7, 0x42, 0x1b, 0x11, 0x4d, 0xba, 0x9b,
	0x6b, 0xa3, 0x54, 0x25, 0x3e, 0xa9, 0xb1, 0xb2, 0x2f, 0x39, 0x85, 0x56, 0xa0, 0x90, 0x1b, 0x7c,
	0x89, 0xbf, 0xd9, 0xd5, 0xd3, 0x1e, 0x3c, 0x7d, 0x03, 0xd1, 0xf3, 0x14, 0xbf, 0x48, 0xf1, 0xa4,
	0xc6, 0xae, 0x19, 0x8e, 0x76, 0x61, 0xa7, 0xfc, 0x84, 0xf4, 0x27, 0x20, 0xd5, 0x4a, 0xc9, 0x07,
	0xd0, 0x32, 0xd2, 0xf0, 0xe9, 0x91, 0xb4, 0xaa, 0xa7, 0xab, 0xe2, 0xda, 0x40, 0x9e, 0xc0, 0x56,
	0x5c, 0x96, 0xcf, 0xbd, 0x9e, 0x72, 0x0c, 0xbd, 0x84, 0xde, 0xfa, 0xe4, 0x96, 0x76, 0x92, 0xb7,
	0xb2, 0x93, 0xee, 0x16, 0x67, 0x08, 0x64, 0x14, 0xcd, 0xe4, 0x15, 0x66, 0x2d, 0x95, 0x0f, 0x91,
	0x0f, 0x0d, 0x2b, 0x96, 0x25, 0xbf, 0xa9, 0x05, 0x33, 0x18, 0xfd, 0xcb, 0x83, 0xce, 0x12, 0x4d,
	0xde, 0xcc, 0x5f, 0xc2, 0xb6, 0x4e, 0x82, 0x00, 0xb5, 0xce, 0x99, 0x3e, 0x72, 0x30, 0xa5, 0x8e,
	0x81, 0xad, 0xee, 0xdb, 0x0c, 0x7b, 0x52, 0x63, 0x85, 0x5b, 0xca, 0x70, 0xc9, 0xc5, 0x34, 0x51,
	0x98, 0x97, 0x73, 0x33, 0xc3, 0x8b, 0x0c, 0x9b, 0x32, 0xe4, 0x6e, 0x47, 0x4d, 0xd8, 0x52, 0xa8,
	0x93, 0xa9, 0xa1, 0xbf, 0xc0, 0x5e, 0x25, 0x56, 0xda, 0xe1, 0xd5, 0xe9, 0xcc, 0xb3, 0xbd, 0xe5,
	0x78, 0x3b, 0x08, 0xe8, 0x79, 0x39, 0x56, 0x9e, 0x55, 0xda, 0x20, 0xa8, 0x94, 0x54, 0xcf, 0xe5,
	0x18, 0x8b, 0x06, 0x59, 0x18, 0x08, 0x85, 0x1d, 0x7b, 0x38, 0x45, 0xad, 0xf9, 0xa4, 0xd8, 0xa5,
	0x4b, 0xb6, 0xc1, 0x1f, 0x75, 0x68, 0x0e, 0x85, 0xc2, 0xc0, 0x48, 0x45, 0x66, 0xd0, 0x71, 0xfc,
	0x24, 0x10, 0x57, 0xa3, 0xaf, 0xff, 0x51, 0xe9, 0xf9, 0xb7, 0x85, 0xe7, 0xff, 0x1e, 0x35, 0xf2,
	0x3b, 0x3c, 0x74, 0x7f, 0x73, 0xc8, 0x81, 0x83, 0xeb, 0xc6, 0x6f, 0x5b, 0xef, 0xd3, 0x3b, 0x78,
	0x14, 0x09, 0x0c, 0x04, 0x6c, 0x67, 0x6b, 0x53, 0x91, 0x1f, 0xa1, 0x5d, 0xda, 0xa2, 0xc4, 0xf5,
	0x62, 0xd5, 0x8f, 0x44, 0xef, 0xf1, 0x9b, 0x60, 0xe5, 0x50, 0x59, 0x63, 0xdb, 0x50, 0xa5, 0x1e,
	0x77, 0x86, 0xaa, 0x8e, 0x92, 0x33, 0x94, 0x63, 0x54, 0x68, 0xed, 0x62, 0xcb, 0x0e, 0xe8, 0x67,
	0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xd1, 0x7e, 0x52, 0x11, 0x94, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DirectorClient is the client API for Director service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DirectorClient interface {
	// Adds one or more user group tickets to the director's list of tickets for match consideration
	AddUserGroupTickets(ctx context.Context, in *AddUserGroupTicketsRequest, opts ...grpc.CallOption) (*AddUserGroupTicketsResponse, error)
	RemoveUserGroupTickets(ctx context.Context, in *RemoveUserGroupTicketsRequest, opts ...grpc.CallOption) (*RemoveUserGroupTicketsResponse, error)
}

type directorClient struct {
	cc *grpc.ClientConn
}

func NewDirectorClient(cc *grpc.ClientConn) DirectorClient {
	return &directorClient{cc}
}

func (c *directorClient) AddUserGroupTickets(ctx context.Context, in *AddUserGroupTicketsRequest, opts ...grpc.CallOption) (*AddUserGroupTicketsResponse, error) {
	out := new(AddUserGroupTicketsResponse)
	err := c.cc.Invoke(ctx, "/matchmakingsystem.Director/AddUserGroupTickets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *directorClient) RemoveUserGroupTickets(ctx context.Context, in *RemoveUserGroupTicketsRequest, opts ...grpc.CallOption) (*RemoveUserGroupTicketsResponse, error) {
	out := new(RemoveUserGroupTicketsResponse)
	err := c.cc.Invoke(ctx, "/matchmakingsystem.Director/RemoveUserGroupTickets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DirectorServer is the server API for Director service.
type DirectorServer interface {
	// Adds one or more user group tickets to the director's list of tickets for match consideration
	AddUserGroupTickets(context.Context, *AddUserGroupTicketsRequest) (*AddUserGroupTicketsResponse, error)
	RemoveUserGroupTickets(context.Context, *RemoveUserGroupTicketsRequest) (*RemoveUserGroupTicketsResponse, error)
}

// UnimplementedDirectorServer can be embedded to have forward compatible implementations.
type UnimplementedDirectorServer struct {
}

func (*UnimplementedDirectorServer) AddUserGroupTickets(ctx context.Context, req *AddUserGroupTicketsRequest) (*AddUserGroupTicketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUserGroupTickets not implemented")
}
func (*UnimplementedDirectorServer) RemoveUserGroupTickets(ctx context.Context, req *RemoveUserGroupTicketsRequest) (*RemoveUserGroupTicketsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveUserGroupTickets not implemented")
}

func RegisterDirectorServer(s *grpc.Server, srv DirectorServer) {
	s.RegisterService(&_Director_serviceDesc, srv)
}

func _Director_AddUserGroupTickets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserGroupTicketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectorServer).AddUserGroupTickets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matchmakingsystem.Director/AddUserGroupTickets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectorServer).AddUserGroupTickets(ctx, req.(*AddUserGroupTicketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Director_RemoveUserGroupTickets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveUserGroupTicketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectorServer).RemoveUserGroupTickets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matchmakingsystem.Director/RemoveUserGroupTickets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectorServer).RemoveUserGroupTickets(ctx, req.(*RemoveUserGroupTicketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Director_serviceDesc = grpc.ServiceDesc{
	ServiceName: "matchmakingsystem.Director",
	HandlerType: (*DirectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddUserGroupTickets",
			Handler:    _Director_AddUserGroupTickets_Handler,
		},
		{
			MethodName: "RemoveUserGroupTickets",
			Handler:    _Director_RemoveUserGroupTickets_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "system.proto",
}

// MatcherClient is the client API for Matcher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MatcherClient interface {
	FindMatches(ctx context.Context, in *FindMatchesRequest, opts ...grpc.CallOption) (*FindMatchesResponse, error)
}

type matcherClient struct {
	cc *grpc.ClientConn
}

func NewMatcherClient(cc *grpc.ClientConn) MatcherClient {
	return &matcherClient{cc}
}

func (c *matcherClient) FindMatches(ctx context.Context, in *FindMatchesRequest, opts ...grpc.CallOption) (*FindMatchesResponse, error) {
	out := new(FindMatchesResponse)
	err := c.cc.Invoke(ctx, "/matchmakingsystem.Matcher/FindMatches", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MatcherServer is the server API for Matcher service.
type MatcherServer interface {
	FindMatches(context.Context, *FindMatchesRequest) (*FindMatchesResponse, error)
}

// UnimplementedMatcherServer can be embedded to have forward compatible implementations.
type UnimplementedMatcherServer struct {
}

func (*UnimplementedMatcherServer) FindMatches(ctx context.Context, req *FindMatchesRequest) (*FindMatchesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindMatches not implemented")
}

func RegisterMatcherServer(s *grpc.Server, srv MatcherServer) {
	s.RegisterService(&_Matcher_serviceDesc, srv)
}

func _Matcher_FindMatches_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindMatchesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MatcherServer).FindMatches(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matchmakingsystem.Matcher/FindMatches",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MatcherServer).FindMatches(ctx, req.(*FindMatchesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Matcher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "matchmakingsystem.Matcher",
	HandlerType: (*MatcherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindMatches",
			Handler:    _Matcher_FindMatches_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "system.proto",
}

// InvokerClient is the client API for Invoker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InvokerClient interface {
	InvokeMatch(ctx context.Context, in *InvokeMatchRequest, opts ...grpc.CallOption) (*InvokeMatchResponse, error)
}

type invokerClient struct {
	cc *grpc.ClientConn
}

func NewInvokerClient(cc *grpc.ClientConn) InvokerClient {
	return &invokerClient{cc}
}

func (c *invokerClient) InvokeMatch(ctx context.Context, in *InvokeMatchRequest, opts ...grpc.CallOption) (*InvokeMatchResponse, error) {
	out := new(InvokeMatchResponse)
	err := c.cc.Invoke(ctx, "/matchmakingsystem.Invoker/InvokeMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InvokerServer is the server API for Invoker service.
type InvokerServer interface {
	InvokeMatch(context.Context, *InvokeMatchRequest) (*InvokeMatchResponse, error)
}

// UnimplementedInvokerServer can be embedded to have forward compatible implementations.
type UnimplementedInvokerServer struct {
}

func (*UnimplementedInvokerServer) InvokeMatch(ctx context.Context, req *InvokeMatchRequest) (*InvokeMatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvokeMatch not implemented")
}

func RegisterInvokerServer(s *grpc.Server, srv InvokerServer) {
	s.RegisterService(&_Invoker_serviceDesc, srv)
}

func _Invoker_InvokeMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvokeMatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InvokerServer).InvokeMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matchmakingsystem.Invoker/InvokeMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InvokerServer).InvokeMatch(ctx, req.(*InvokeMatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Invoker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "matchmakingsystem.Invoker",
	HandlerType: (*InvokerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InvokeMatch",
			Handler:    _Invoker_InvokeMatch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "system.proto",
}
